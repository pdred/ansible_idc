# roles/dhcp/tasks/main.yml
---
- name: Verify required variables
  ansible.builtin.assert:
    that:
      - network_subnet is defined
      - network_netmask is defined
      - dhcp_range_start is defined
      - dhcp_range_end is defined
    fail_msg: "Required DHCP variables are not defined"
  become: false

- name: Create DHCP directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "~/lab-infra/dhcp/config"
    - "~/lab-infra/dhcp/data"
    - "~/lab-infra/dhcp/src"
  become: false

- name: Generate DHCP configuration
  ansible.builtin.template:
    src: "dhcpd.conf.j2"
    dest: "~/lab-infra/dhcp/config/dhcpd.conf"
    mode: '0644'
  become: false

- name: Copy DHCP Dockerfile
  ansible.builtin.template:
    src: "Dockerfile.j2"
    dest: "~/lab-infra/dhcp/src/Dockerfile"
    mode: '0644'
  become: false

- name: Create podman directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - "~/podman-storage"
    - "~/podman-tmp"
  become: false

- name: Build DHCP container
  ansible.builtin.shell: |
    mkdir -p ~/podman-tmp
    podman --root ~/podman-storage --runroot ~/podman-tmp build -t {{ container_registry }}/dhcp-server ~/lab-infra/dhcp/src/
  register: build_result
  changed_when: true
  become: false

- name: Remove existing DHCP container if exists
  ansible.builtin.shell: |
    mkdir -p ~/podman-tmp
    podman --root ~/podman-storage --runroot ~/podman-tmp rm -f dhcp-server || true
  register: container_remove
  changed_when: "'Deleted' in container_remove.stdout"
  failed_when: false
  become: false

- name: Create DHCP container
  ansible.builtin.shell: |
    mkdir -p ~/podman-tmp
    podman --root ~/podman-storage --runroot ~/podman-tmp run -d --name dhcp-server \
      -v {{ ansible_user_home }}/lab-infra/dhcp/config:/etc/dhcp:Z \
      -v {{ ansible_user_home }}/lab-infra/dhcp/data:/var/lib/dhcp:Z \
      --net=host \
      {{ container_registry }}/dhcp-server
  register: container_create
  changed_when: true
  become: false

- name: Generate systemd service file
  ansible.builtin.template:
    src: "dhcp-server.service.j2"
    dest: "{{ systemd_user_dir }}/dhcp-server.service"
    mode: '0644'
  register: dhcp_service_file
  become: false

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
    scope: user
  when: dhcp_service_file.changed
  become: false

- name: Enable and start DHCP service
  ansible.builtin.systemd:
    name: dhcp-server
    state: started
    enabled: true
    scope: user
  become: false

- name: Configure firewall for DHCP
  ansible.posix.firewalld:
    service: dhcp
    permanent: true
    state: enabled
  become: true
  notify: "Reload firewall"

- name: Verify DHCP service is responding
  ansible.builtin.shell: |
    sudo nmap -sU -p 67 {{ dhcp_server_ip }}
  register: dhcp_test
  changed_when: false
  failed_when: dhcp_test.rc != 0 and 'open' not in dhcp_test.stdout
  become: false
