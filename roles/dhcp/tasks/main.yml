# roles/dhcp/tasks/main.yml
---
- name: Verify required variables
  ansible.builtin.assert:
    that:
      - container_registry is defined
      - dhcp_lease_time is defined
      - dhcp_max_lease_time is defined
      - network_subnet is defined
      - network_netmask is defined
      - clusters is defined and clusters | length > 0
    fail_msg: "Missing required DHCP configuration variables"

- name: Create DHCP directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    mode: '0750'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
  loop:
    - "~/lab-infra/dhcp/config"
    - "~/lab-infra/dhcp/data"
    - "~/lab-infra/dhcp/src"

- name: Generate DHCP configuration
  ansible.builtin.template:
    src: "dhcpd.conf.j2"
    dest: "~/lab-infra/dhcp/config/dhcpd.conf"
    mode: '0640'
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    validate: '/usr/sbin/dhcpd -t -cf %s'
  register: dhcp_config

- name: Copy DHCP Dockerfile
  ansible.builtin.template:
    src: "Dockerfile.j2"
    dest: "~/lab-infra/dhcp/src/Dockerfile"
    mode: '0640'
  register: dockerfile_copy

- name: Build DHCP container
  ansible.builtin.shell: |
    export XDG_RUNTIME_DIR="/run/user/{{ ansible_user_uid }}"
    podman build -t {{ container_registry }}/dhcp-server ~/lab-infra/dhcp/src/
  register: build_result
  changed_when: "'Writing manifest' in build_result.stdout"
  become: false

# New task to ensure any existing container is removed before creating new one
- name: Remove existing DHCP container if exists
  containers.podman.podman_container:
    name: dhcp-server
    state: absent
  when: dhcp_config.changed or container_build.changed

# New task to create container with proper volume mounts
- name: Create DHCP container
  containers.podman.podman_container:
    name: dhcp-server
    image: "{{ container_registry }}/dhcp-server"
    state: present
    volumes:
      - "/home/{{ ansible_user }}/lab-infra/dns/config:/etc/bind:Z"
      - "/home/{{ ansible_user }}/lab-infra/dns/data:/var/lib/bind:Z"
      - "/home/{{ ansible_user }}/lab-infra/dns/logs:/var/log/named:Z"
    network: host
    privileged: true  # Required for DHCP server functionality
  register: container_create
  become: false

- name: Generate systemd service file
  ansible.builtin.template:
    src: "dhcp-server.service.j2"
    dest: "{{ systemd_user_dir }}/dhcp-server.service"
    mode: '0644'
  register: systemd_service

- name: Reload systemd daemon
  ansible.builtin.systemd:
    daemon_reload: true
    scope: user
  when: systemd_service.changed

- name: Enable and start DHCP service
  ansible.builtin.systemd:
    name: dhcp-server
    state: started
    enabled: true
    scope: user
  register: dhcp_service

- name: Configure firewall for DHCP
  ansible.posix.firewalld:
    service: dhcp
    permanent: true
    state: enabled
  notify: "Reload firewall"
  become: true

- name: Verify DHCP service is responding
  ansible.builtin.wait_for:
    port: 67
    timeout: 30
    state: started
  register: dhcp_check
