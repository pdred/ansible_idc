# .github/workflows/validate-docs.yml
---
name: Validate Documentation

on:
  push:
    paths:
      - '**.org'
  pull_request:
    paths:
      - '**.org'

jobs:
  validate-org:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Emacs
        run: |
          sudo apt-get update
          sudo apt-get install -y emacs-nox

      - name: Create minimal init file
        run: |
          cat > init.el << 'EOF'
          (require 'package)
          (add-to-list 'package-archives '("melpa" . "https://melpa.org/packages/") t)
          (package-initialize)

          (unless (package-installed-p 'org)
            (package-refresh-contents)
            (package-install 'org))

          (require 'org)

          ;; Basic validation function
          (defun validate-org-file (file)
            "Validate an org file for basic syntax"
            (with-current-buffer (find-file-noselect file)
              (org-mode)
              (let ((errors 0))
                ;; Check for malformed headlines
                (org-element-map (org-element-parse-buffer) 'headline
                  (lambda (headline)
                    (unless (org-element-property :raw-value headline)
                      (setq errors (1+ errors))
                      (message "Error: Malformed headline found"))))

                ;; Check for proper list formatting
                (org-element-map (org-element-parse-buffer) 'plain-list
                  (lambda (list)
                    (unless (memq (org-element-property :type list) '(ordered unordered descriptive))
                      (setq errors (1+ errors))
                      (message "Error: Invalid list format found"))))

                (if (> errors 0)
                    (error "Found %d error(s) in %s" errors file)
                  (message "No errors found in %s" file)))))
          EOF

      - name: Validate org files
        run: |
          emacs --batch --no-init-file --load init.el --eval '(validate-org-file "README.org")'
